[%#
# Copyright 2010 - Prefeitura Municipal de Fortaleza
#
# Este arquivo é parte do programa Ação - Sistema de Acompanhamento de
# Projetos Sociais
#
# O Ação é um software livre; você pode redistribui-lo e/ou modifica-lo
# dentro dos termos da Licença Pública Geral GNU como publicada pela
# Fundação do Software Livre (FSF); na versão 2 da Licença.
#
# Este programa é distribuido na esperança que possa ser util, mas SEM
# NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
# MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU
# para maiores detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o
# título "LICENCA.txt", junto com este programa, se não, escreva para a
# Fundação do Software Livre(FSF) Inc., 51 Franklin St, Fifth Floor,
%]
[% META title = 'Lista de Leituras para o Digitador'%]
[% INCLUDE 'auth/registros/volume/dossie/documento/header.tt' %]
[% INCLUDE 'errosucesso.tt' %]

[% SET num_por_pagina = 30 %]

[% SET interval_ini = c.req.param('interval_ini') %]
[% IF !interval_ini %]
  [% SET interval_ini = 0 %]
[% END %]


[% SET documentos_validos = c.req.param('documentos_validos') %]
[% IF documentos_validos %]
    [% where_documentos_validos = '1 = 1'  %]
[% ELSE %]
    [% where_documentos_validos = '$x/dc:invalidacao/text() = \'1970-01-01T00:00:00Z\'' %]
[% END %]

[% SET tipo_documento = c.req.param('tipo_documento') %]
[% IF tipo_documento %]
    [% where_tipo_documento = '$y/../../../../../@targetNamespace = "' _ tipo_documento _ '"' %]
[% ELSE %]
    [% where_tipo_documento = '1 = 1'  %]
[% END %]

[% SET tipo_documento = c.req.param('tipo_documento') %]




[% SET vol = ( c.model('Volume').getDadosVolumeId(id_volume) ) %]
[% SET dos = ( c.model('Documento').getDadosDossie(id_volume, controle) ) %]


<fieldset>
  <legend>Dados do volume</legend>
  <dl>
    <dt> <label> VOLUME: </label> </dt>
    <dd> <span> [% vol.nome %] </span> </dd>
    <dt> <label> PRONTUÁRIO: </label> </dt>
    <dd> <span> [% dos.nome %] </span> </dd>
  <dl>
</fieldset>

<fieldset>
  <legend>Filtrar Documentos</legend>	
  <form>   
    <strong>Incluir Documentos Inativos: </strong>
    <input type="checkbox" name="documentos_validos" id="documentos_validos">
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <strong>Tipo de Documento: </strong>
    <select name="tipo_documento" id="tipo_documento">
      <option value="">Escolha uma opção</option>
      [% c.model('XSD').options_xsd %]
    </select>
    &nbsp;&nbsp;&nbsp;
    <input type="submit" name="submit_form" id="submit_form" value="Pesquisar">
  </form>

  <br/>
<form action="[% c.uri_for('/auth/registros/volume/' _ id_volume _ '/' _ controle _ '/inserirdocumento') %]" id="form" name="form" method="post" onSubmit="return validaDropDonw()">

    <fildset>
        <dt>
            <select id="xsdDocumento" name="xsdDocumento">
                <option value="">Escolha uma opção</option>
                [% c.model('XSD').options_xsd %]
            </select>

            <input type="submit" value="Inserir Documento">
        </dt>
    </fildset>
<br>

</form>
  <table>
  <thead>
   <tr>
    <th>Tipo Documento</th>
    <th>Criação</th>
    <th colspan="2">Invalidação / Motivo</th>
    <th>Doc. Físico</th>
    <th>Original</th>
    <th>Ação</th>
   </tr>
  </thead>
  <TBODY>

 [% # O foreach abaixo vai buscar diretamente no model por estar livre de contexto %]
 [% # (nao recebe argumento pela url) %]

 [% TRY %]
 [%
     xqueryret = PROCESS 'auth/registros/volume/dossie/documento/lista_xqueryret.tt';
     xquery = c.model('Documento').listar_documentos({
                                                xqueryret       		  => xqueryret,
                                                ip              		  => c.req.address,
                                                id_volume        		  => id_volume,
                                                controle	      	      => controle,
                                                where_documentos_validos  => where_documentos_validos,
                                                where_tipo_documento      => where_tipo_documento,
                                                interval_ini      		  => interval_ini,
                                                num_por_pagina            => num_por_pagina
                                        });
 	 c.model('Sedna').begin;
	 c.model('Sedna').execute( xquery.list );

	 WHILE (doc = c.model('Sedna').get_item);
		 SET html = c.model('Sedna').get_item;
	 html;

	 END; %]

 [%# Executa a contagem dos registros para fazer a paginação  %]
 [% c.model('Sedna').execute( xquery.count );
    WHILE (contador = c.model('Sedna').get_item);
      count = contador;
    END; %]

 [% c.model('Sedna').commit %]
[% CATCH %]
 <div class="erro">ERRO AO PROCESSAR CONSULTA:
  <PRE>[% error.info %]</PRE>
 </div>
[% END %]

</TBODY>
</table>

<br/>



[% paginacao = PROCESS 'auth/registros/volume/dossie/documento/paginacao.tt' %]
[% paginacao %]

</fieldset>

<script language="javascript" type="text/javascript">

    function validaDropDonw(){
        if (document.getElementById('xsdDocumento').value == '') {
            alert('Selecine um tipo de documento');
            document.getElementById('xsdDocumento').focus();
            return false;
        }
    }

    function confirmaInvalidacao(){
        if (!confirm('Deseja invalidar este documento?')){
             return false;
        }
     }
</script>
[% INCLUDE 'footer.tt' %]
